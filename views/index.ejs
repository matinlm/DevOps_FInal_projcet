<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="/css/bootstrap.min.css" />
    <link rel="stylesheet" href="/css/bootstrap-datepicker.min.css">
    <link rel="stylesheet" href="/css/style.css" />
    <script src="/js/jquery.min.js"></script>
    <script src="/js/axios.min.js"></script>
    <script src="/js/bootstrap-datepicker.min.js"></script>
    <title>Assessment Record</title>
    <script>
        let currentID = null;
        let oldStations = null;
        let oldActual = null;
        let oldDate = null;
        let actualInPercent = false;
        fetch(`https://source.unsplash.com/1600x900/?ice-cream`).then((response) => {
            document.body.style.backgroundImage = 'url(' + response.url + ')';
        });

        function arraysEqual(a, b) {
            if (a === b) return true;
            if (a == null || b == null) return false;
            if (a.length != b.length) return false;

            for (var i = 0; i < a.length; ++i) {
                if (a[i] !== b[i]) return false;
            }
            return true;
        }

        async function getStations() {
            try {
                const response = await axios.get('/stations');
                let select = document.getElementById('select');
                let stations = response.data;
                if (!arraysEqual(oldStations, stations)) {
                    if (oldStations !== null) {
                        showAlert();
                    }
                    document.getElementById("select").options.length = 0;
                    for (var data in stations) {
                    option = new Option(stations[data]);
                    option.id = stations[data];
                    option.setAttribute("onclick","getStationsDetails(" + stations[data]+ ");");
                    select.options[select.options.length] = option
                    oldStations = stations;
                }
                }
            } catch (error) {
                console.error(error);
            }
        }

        async function updateStation(id, value, date) {
            try {
                const response = await  axios.patch('/stations/' + id, {
                'actual': value, 'date': date,
            })
            .then((response) => {
            });
            } catch (error) {
                console.error(error);
            }
        }

        function getPercentageChange(oldNumber, newNumber){
            var decreaseValue = oldNumber - newNumber;

            return ((decreaseValue / oldNumber) * 100) * -1;
        }

        function isNumeric(num){
            if (!isNaN(num)) {
                document.getElementById('actual').classList.remove("is-invalid");
                return true;
            } else {
                document.getElementById('actual').classList.add("is-invalid");
                return false;
            }
        }

        function saveData(){
            var value = document.getElementById('actual').value;
            var date = document.getElementById('date').value;
            var id = document.getElementById('hiddenID').value;
            if (isNumeric(value)) {
                updateStation(id, value, date);
            }
            return true;
        }

        function addOnchangeListener(){
            var changed = false;
            var textarea = document.getElementById('actual');
            var datearea = document.getElementById('date');
            if (textarea !== null && datearea !== null) {
                textarea.onchange = function() {
                    changed = saveData();
                }
                datearea.onchange = function() {
                    changed = saveData();
                }
            }
        }

        function addOnClickListener(value, percentage){
            textarea = document.getElementById('variance-label');
            textarea.onclick = function() {
                if ( !actualInPercent ) {
                    document.getElementById('variance').value = percentage.toFixed(2) + "%";
                    actualInPercent = true;
                } else {
                    document.getElementById('variance').value = value;
                    actualInPercent = false;
                }
            }
        }

        async function getStationsDetails(id) {
            try {
                currentID = id;
                const response = await axios.get('/stations/' + id);
                let actual = parseInt(response.data.actual);
                let date = response.data.date.split("T")[0];
                isNumeric(document.getElementById('actual').value);
                let target = parseInt(response.data.target);
                let variance = actual - target;
                let percentage = getPercentageChange(target, actual);
                addOnClickListener(variance, percentage);
                if (actual !== oldActual || date !== oldDate) {
                    let date = response.data.date.split("T")[0];
                    document.getElementById('hiddenID').value = id;
                    document.getElementById('stationID').value = response.data.id;
                    document.getElementById('date').value = date;
                    document.getElementById('target').value = response.data.target;
                    document.getElementById('actual').value = response.data.actual;
                    let varianceColor = document.getElementById('variance');
                    varianceColor.value = variance;
                    if (percentage >= 5) {
                        varianceColor.style.color = "green";
                    } else if (percentage <= -10){
                        varianceColor.style.color = "red";
                    } else {
                        varianceColor.style.color = "";
                    }
                    addOnchangeListener();
                    oldActual = actual;
                    oldDate = date;
                }
            } catch (error) {
                console.error(error);
            }
        }

        function showAlert() {
            $('.alert-placeholder').append('<div id="alertdiv" class="alert alert-success"><span> Eine Station wurde hinzugef√ºgt! </span></div>')
            setTimeout(function() {
            $("#alertdiv").remove();
            }, 5000);
        }

        function liveReload(){
            if (currentID !== null) {
                getStationsDetails(currentID);
            }
            getStations();
        }
        window.onload = setInterval(liveReload, 1000);
    </script>
</head>
<body>
    <div class="row justify-content-center alert-placeholder">
    </div>
    <div class="row h-100 main-element">
        <div class="col-sm-12 my-auto">
            <div class="card mx-auto my-auto">
                <h5 class="card-header">Assessment Record</h5>
                <div class="card-body" id="card">
                    <div class="row justify-content-between">
                        <div class="col-md-4">
                            <select class="custom-select h-100" id="select" multiple>
                            </select>
                        </div>
                        <div class="col-md-8">
                            <div class="col-md">
                                <div class="form-group row">
                                    <label for="stationID" class="col-12 col-md-4 col-form-label">Station ID</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control disabled" id="stationID" placeholder="" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md">
                                <div class="form-group row">
                                    <label for="date" class="col-12 col-md-4 col-form-label">Date</label>
                                    <div class="col-sm-6">
                                            <input type="date" class="form-control disabled" id="date" placeholder="" data-provide="datepicker">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md">
                                <div class="form-group row">
                                    <label for="target" class="col-12 col-md-4 col-form-label">Target</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="target" placeholder="" readonly>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md">
                                <div class="form-group row">
                                    <label for="actual" class="col-12 col-md-4 col-form-label">Actual</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="actual" placeholder="">
                                        <input type="hidden" class="form-control" id="hiddenID" value="">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md">
                                <div class="form-group row">
                                    <label class="col-12 col-md-4 col-form-label" id="variance-label">Variance</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="variance" placeholder="" readonly>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        $(document).off('.datepicker.data-api');
    </script>
</body>
</html>